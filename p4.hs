module Practica4 where

----------------------------------------------------------

--Practica 4: Validación de tarjetas de crédito
------------------------------------------------------------

-- ===================================

-- Ejercicio 1 

-- ===================================

getDigits :: Integer -> [Integer]
getDigits num = reversa $ listaNums num []
    where
        listaNums 0 l = l
        listaNums n l = listaNums (div n 10) ((mod n 10):l)

reversa [] = []
reversa (x:xs) = reversa (xs) ++ [x]

-- ===================================

-- Ejercicio 2

-- ===================================
doubleSecond :: [Integer] -> [Integer]
doubleSecond l = [if not $ even i then x*2 else x | (x, i) <- zip l [0..]] 
-- ===================================

-- Ejercicio 3

-- ===================================
planishAll ::[Integer] -> [Integer]
planishAll l = [if x > 9 then aplanar x else x | x <- l]
aplanar x = sumDigits $ getDigits x
-- ===================================

-- Ejercicio 4

-- ===================================
sumDigits :: [Integer] -> Integer
sumDigits l = suma l 0
    where
        suma [] n = n
        suma (x:xs) n = suma xs (n+x)
-- ===================================

-- Ejercicio 5

-- ==================================
isValid :: Integer -> Bool
isValid n = (sumDigits $ planishAll $ doubleSecond $ getDigits n) `mod` 10 == 0
-- =================================

-- Ejercicio 6

-- =================================
numValid :: [Integer] -> Int
numValid list = length [x | x <- list, isValid x]
-- =================================

-- Ejercicio 7

-- =================================
cardsValid::[Integer]->[Integer]
cardsValid list = [x | x <- list, isValid x]
-- =================================

formatoNumeroTarjeta :: [Int] -> String
formatoNumeroTarjeta digitos
    | length digitos /= 16 = error "La lista debe contener exactamente 16 dígitos."
    | otherwise = concat [ formatoGrupo (take 4 (drop (n * 4) digitos)) | n <- [0..3] ]
  where
    formatoGrupo :: [Int] -> String
    formatoGrupo grupo = concatMap show grupo ++ if length grupo == 4 then " " else ""



listNum   =    [4716347184862961,
4532899082537349,
4485429517622493,
4320635998241421,
4929778869082405,
5256283618614517,
5507514403575522,
5191806267524120,
5396452857080331,
5567798501168013,
6011798764103720,
6011970953092861,
6011486447384806,
6011337752144550,
6011442159205994,
4916188093226163,
4916699537435624,
4024607115319476,
4556945538735693,
4532818294886666,
5349308918130507,
5156469512589415,
5210896944802939,
5442782486960998,
5385907818416901,
6011920409800508,
6011978316213975,
6011221666280064,
6011285399268094,
6011111757787451,
4024007106747875,
4916148692391990,
4916918116659358,
4024007109091313,
4716815014741522,
5370975221279675,
5586822747605880,
5446122675080587,
5361718970369004,
5543878863367027,
6011996932510178,
6011475323876084,
6011358905586117,
6011672107152563,
6011660634944997,
4532917110736356,
4485548499291791,
4532098581822262,
4018626753711468,
4454290525773941,
5593710059099297,
5275213041261476,
5244162726358685,
5583726743957726,
5108718020905086,
6011887079002610,
6011119104045333,
6011296087222376,
6011183539053619,
6011067418196187,
4532462702719400,
4420029044272063,
4716494048062261,
4916853817750471,
4327554795485824,
5138477489321723,
5452898762612993,
5246310677063212,
5211257116158320,
5230793016257272,
6011265295282522,
6011034443437754,
6011582769987164,
6011821695998586,
6011420220198992,
4716625186530516,
4485290399115271,
4556449305907296,
4532036228186543,
4916950537496300,
5188481717181072,
5535021441100707,
5331217916806887,
5212754109160056,
5580039541241472,
6011450326200252,
6011141461689343,
6011886911067144,
6011835735645726,
6011063209139742,
3579517444387209,
3767250784667541,
3477171902952673,
3798852678889749,
3454499316207827,
3499685440887576,
3477279387370269,
3701477276002793,
3744657924689268,
3408607522032008,
3495693939337707,
3796102013746008,
3465908445605212,
3766389432226480,
3787533840293475,
3481595483552931,
3457141376426823,
3475565541196262,
3709197401169031,
3750592559106822,
3731295380384602,
3467345484887282,
3706978142131153,
3779681926547404,
3791274967800695,
3752132575761616,
3790558059463707,
3458354545246713,
3778515362272012,
3457632409132322]


